<?php

/**
 * @file
 * Hook implementations for the AmazonS3 module.
 */

/**
 * Implements hook_stream_wrappers().
 *
 * Create a stream wrapper for S3.
 */
function amazons3_stream_wrappers() {
  // This hook is called before hook_init(), so we have to manually register
  // the autoloader.
  composer_manager_register_autoloader();

  return array(
    's3' => array(
      'name' => 'Amazon S3',
      'class' => 'Drupal\amazons3\StreamWrapper',
      'description' => t('Amazon Simple Storage Service'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function amazons3_menu() {
  $items = array();

  $items['admin/config/media/amazons3'] = array(
    'title' => 'Amazon S3',
    'description' => 'Configure S3 credentials and settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amazons3_admin'),
    'access arguments' => array('administer amazons3'),
    'file' => 'amazons3.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function amazons3_permission() {
  return array(
    'administer amazons3' => array(
      'title' => t('Administer AmazonS3'),
    ),
  );
}

/**
 * Implements hook_field_default_field_bases_alter().
 *
 * Allows a variable to override all exported field bases to use 'Amazon S3' as
 * the Upload destination. For example this can be added to environment-specific
 * Drupal settings files, to allow certain environments to upload to S3 while
 * other environments upload to the exported (public or private) URI scheme:
 * @code
 * $conf['amazons3_file_uri_scheme_override'] = 's3';
 * @endcode
 */
function amazons3_field_default_field_bases_alter(&$fields) {
  if ($uri_scheme = variable_get('amazons3_file_uri_scheme_override', FALSE)) {
    foreach($fields as $key => $item) {
      if (isset($item['settings']['uri_scheme'])) {
        $fields[$key]['settings']['uri_scheme'] = $uri_scheme;
      }
    }
  }
}
